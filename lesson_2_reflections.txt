Question:
What happens when you initialize a repository? Why do you need to do it?

Answer:
Git creates its files in the directory so it can work.

Question:
How is the staging area different from the working directory and the repository? What value do you think it offers?

Answer:
It keeps track of files relevant to a commit. We can add separate files in separate commits for example.

Question:
How can you use the staging area to make sure you have one commit per logical change?

Answer:
By using diff on working dir, staging area and commits.

Question:
What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Answer:
Making experimental changes, working on 2 deferent implementations, and so on...

Question:
How do the diagrams help you visualize the branch structure?

Answer:
Graphs and shit, geometry dude.

Question:
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

Answer:
A commit that has refenences to all the merged branches.

Question:
What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Answer:
Merging manually can be tedious. Automatic merging can make semantic mistakes, and it doesn't snow you what changed.
